JLISETUP	;JLI-SETUP DUPLICATE SET OF REDONE ROUTINES ;08/10/11  09:53
	;;0.0;
	Q
	;
START	;
	N BAD,CNT,CURRLEN,CURRNAME,MATCH,NEWNAME,X,XCURR,XNEW,YESNO,GLOBAL
	R !,"Enter the Current Namespace (2 or more chars): ",CURRNAME:DTIME Q:CURRNAME=""  I $L(CURRNAME)<2 Q
	R !,"Enter the Desired Namespace (2 or more chars): ",NEWNAME:DTIME Q:NEWNAME=""  I $L(NEWNAME)<2 Q
	S CURRNAME=$$UP^XLFSTR(CURRNAME)
	S NEWNAME=$$UP^XLFSTR(NEWNAME)
	I CURRNAME=NEWNAME N XQUIT S XQUIT=0 D  I XQUIT QUIT
	. W !,"*** WARNING ****  YOU ARE GOING TO REPLACE THE ROUTINES"
	. R !,"DO YOU MEAN TO DO THIS? NO// ",X:60 I "Yy"'[$E(X) S XQUIT=1
	. Q
	S CURRLEN=$L(CURRNAME)
	W !,"IN THE FOLLOWING INDICATE NO IF ALL ROUTINES IS ASKED, THEN"
	W !,"ENTER  ",CURRNAME,"*   FOR THE ROUTINE(S) DESIRED"
	X ^%ZOSF("RSEL")
	S GLOBAL=$NA(^TMP("XCURR",$J)) K @GLOBAL
	S XCURR=0,CNT=0,BAD=0
	F  S XCURR=$O(^UTILITY($J,XCURR)) Q:XCURR=""  S MATCH=$S($E(XCURR,1,CURRLEN)=CURRNAME:1,1:0) S:MATCH CNT=CNT+1,@GLOBAL@(XCURR)="" K ^UTILITY($J,XCURR) I 'MATCH W !,"REMOVED ",XCURR," - DOESN'T START WITH ",CURRNAME S BAD=BAD+1
	W !,CNT," ROUTINES SELECTED"
	I BAD>0 W !,BAD," ROUTINES REMOVED THAT DIDN'T BEGIN WITH ",CURRNAME R !,"Want to continue (Y/N)? ",YESNO:DTIME I "Yy"'[$E(YESNO) QUIT
	S XCURR=0 F  S XCURR=$O(@GLOBAL@(XCURR)) Q:XCURR=""  S XNEW=NEWNAME_$E(XCURR,CURRLEN+1,99) D SET1(CURRNAME,NEWNAME,XCURR,XNEW) W !,XCURR," -> ",XNEW,"  - done"
	W !,"Finished",!!
	Q
	;
SET1(CURRNAME,NEWNAME,INPUT,OUT)	;
	N GLOBAL
	D CREATE(INPUT)
	S GLOBAL=$NA(^TMP("JLISETDB",$J)) K @GLOBAL
	D LOADROU("ZZ"_$E($$NOW^XLFDT(),2,7)_INPUT,GLOBAL)
	I CURRNAME'=NEWNAME D REPLACE(CURRNAME,NEWNAME,GLOBAL)
	D SAVE1(OUT,GLOBAL)
	Q
	;
CREATE(ROUNAME)	;
	N DIF,DIE,XCN,X
	; remove any current version
	D CLEARROU("ZZ"_$E($$NOW^XLFDT(),2,7)_ROUNAME)
	D ENTRY^XTMREDO(ROUNAME)
	Q
	;
CLEARROU(ROUNAME)	;
	N DIE,DIF,X,XCN
	K ^TMP("ZZUTXTMR1")
	S (DIF,DIE)="^TMP(""ZZUTXTMR1"",",XCN=0,X=ROUNAME N ROUNAME S ROUNAME=X
	X ^%ZOSF("SAVE")
	K ^TMP("ZZUTXTMR1")
	Q
	;
LOADROU(ROUNAME,GLOBAL)	;load routine into global location
	; ROUNAME - INPUT - ROUTINE NAME TO BE LOADED
	; GLOBAL  - INPUT - CLOSED GLOBAL LOCATION TO BE USED FOR LOADING FILE
	N DIF,XCNP,X
	S DIF=$E(GLOBAL,1,$L(GLOBAL)-1)_",",XCNP=0,X=ROUNAME
	X ^%ZOSF("LOAD")
	Q
	;
REPLACE(FINDSTR,NEWSTR,GLOBAL)	;
	N LINNUM,LINE,LINE1,OUTLIN,ROUNAME
	S ROUNAME=$P(@GLOBAL@(1,0)," ")
	I $E(@GLOBAL@(1,0),1,$L(FINDSTR))=FINDSTR S @GLOBAL@(1,0)=NEWSTR_$E(@GLOBAL@(1,0),$L(FINDSTR)+1,999) ; modify routine name on line 1 if matches
	;F I=2:1 Q:'$D(@GLOBAL@(I,0))  F  Q:@GLOBAL@(I,0)'[FINDSTR  S @GLOBAL@(I,0)=$P(@GLOBAL@(I,0),FINDSTR)_NEWSTR_$P(@GLOBAL@(I,0),FINDSTR,2,99)
	F LINNUM=2:1 Q:'$D(@GLOBAL@(LINNUM,0))  S LINE=^(0),LINE1=LINE,OUTLIN="" D  S @GLOBAL@(LINNUM,0)=OUTLIN
	. N ARGNUM,INDNTCNT,LOC,I
	. S ARGNUM=0,INDNTCNT=0,LOC=$NA(^TMP("JLISETDB_REPLACE",$J)) K @LOC
	. I $E(LINE,1)'=" " S LINE=$$SETTAG^XTMRPAR1(LINE,LINNUM,LOC)
	. F  Q:($E(LINE,1)'=" ")&($E(LINE,1)'=".")  S:$E(LINE,1)=" " LINE=$E(LINE,2,999) I $E(LINE,1)="." S LINE=$E(LINE,2,999),INDNTCNT=INDNTCNT+1,@LOC@(LINNUM,0,"INDENT")=INDNTCNT
	. S OUTLIN=$$MOVELINE(OUTLIN,LINE,.LINE1)
	. F  Q:LINE=""  S LINE=$$GETCMD^XTMRPAR1(LINE,LINNUM,.ARGNUM,LOC) D
	. . ; skip commands that aren't DO or GOTO
	. . I $D(@LOC@(LINNUM,ARGNUM,"CMD")),",DO,GOTO,"[(","_@LOC@(LINNUM,ARGNUM,"CMD")_",") D
	. . . N NARGS
	. . . ;W !,"LINE=",$G(LINE),"  LINNUM=",$G(LINNUM),"  ARGNUM=",$G(ARGNUM),"   LINE1=",$G(LINE1)
	. . . ;W !,"LOC=",LOC,"   GLOBAL=",@LOC@(LINNUM,ARGNUM,"CMD")
	. . . S NARGS=0 F I=1:1 Q:'$D(@LOC@(LINNUM,ARGNUM,"CMD","ARG",I))  S NARGS(I)=^(I) D
	. . . . ;W !,"I=",I,"  NARGS(I)=",NARGS(I),"  LINE1=",LINE1,"  FINDSTR=",FINDSTR,"  NEWSTR=",NEWSTR
	. . . . I NARGS(I)=ROUNAME S LINE1=$P(LINE1,FINDSTR)_NEWSTR_$P(LINE1,FINDSTR,2,99)
	. . . . ; want to convert names of referenced routines, but not in indirection or in arguments
	. . . . I $P(NARGS(I),"(")[("^"_FINDSTR),$P(NARGS(I),")")'[("@^"_FINDSTR) S LINE1=$P(LINE1,"^"_FINDSTR)_"^"_NEWSTR_$P(LINE1,"^"_FINDSTR,2,99)
	. . . . ;W !,"LINE1=",LINE1
	. . . . Q
	. . . Q
	. . ; check for ^FINDSTR preceeded by Alpha or Numeric and change FINDSTR to NEWSTR
	. . F I=2:1:($L(LINE1)-$L(LINE)) Q:$E(LINE1,I)=""  I $E(LINE1,I,I+$L(FINDSTR))=("^"_FINDSTR),$E(LINE1,I-1)?1AN S LINE1=$E(LINE1,1,I)_NEWSTR_$E(LINE1,I+$L(FINDSTR)+1,999)
	. . ;W !,"AT END LINE1=",LINE1
	. . S OUTLIN=$$MOVELINE(OUTLIN,LINE,.LINE1)
	. . ;W !,"OUTLIN=",OUTLIN,"  LINE=",LINE,"   LINE1=",LINE1
	. . Q
	. Q
	Q
	;
MOVELINE(OUTLIN,LINE,LINE1)	;
	S OUTLIN=OUTLIN_$E(LINE1,1,$L(LINE1)-$L(LINE)),LINE1=LINE
	Q OUTLIN
	;
SAVE1(ROUNAME,LOADGLOB)	;
	N DIE,DIF,X,XCN
	S (DIF,DIE)=$E(LOADGLOB,1,$L(LOADGLOB)-1)_",",XCN=0,X=ROUNAME N ROUNAME S ROUNAME=X
	X ^%ZOSF("SAVE")
	K @LOADGLOB
	Q
